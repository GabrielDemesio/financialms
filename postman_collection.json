{
	"info": {
		"_postman_id": "financial-banking-system",
		"name": "Financial Banking System API",
		"description": "Collection para testar o sistema bancário com autenticação JWT, operações bancárias e controle de gastos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "account_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "🔐 Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('user_id', response.id);",
									"    pm.test('User registered successfully', function () {",
									"        pm.expect(response.cpf).to.eql('12345678901');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cpf\": \"12345678901\",\n    \"name\": \"João Silva\",\n    \"email\": \"joao@email.com\",\n    \"password\": \"senha123\",\n    \"phone\": \"11999999999\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"    pm.test('Login successful', function () {",
									"        pm.expect(response.token).to.not.be.empty;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cpf\": \"12345678901\",\n    \"password\": \"senha123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					}
				}
			]
		},
		{
			"name": "🏦 Banking Operations",
			"item": [
				{
					"name": "Get My Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.length > 0) {",
									"        pm.collectionVariables.set('account_id', response[0].id);",
									"    }",
									"    pm.test('Accounts retrieved', function () {",
									"        pm.expect(response).to.be.an('array');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						}
					}
				},
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('account_id', response.id);",
									"    pm.test('Account created successfully', function () {",
									"        pm.expect(response.accountType).to.eql('CHECKING');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountType\": \"CHECKING\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						}
					}
				},
				{
					"name": "Deposit Money",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountId\": {{account_id}},\n    \"amount\": 1000.00,\n    \"description\": \"Depósito inicial\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/bank-transactions/deposit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bank-transactions",
								"deposit"
							]
						}
					}
				},
				{
					"name": "Withdraw Money",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountId\": {{account_id}},\n    \"amount\": 100.00,\n    \"description\": \"Saque no caixa eletrônico\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/bank-transactions/withdraw",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bank-transactions",
								"withdraw"
							]
						}
					}
				},
				{
					"name": "Transfer Money",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fromAccountId\": {{account_id}},\n    \"toAccountNumber\": \"ACC-000000002\",\n    \"amount\": 50.00,\n    \"description\": \"Transferência para amigo\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/bank-transactions/transfer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bank-transactions",
								"transfer"
							]
						}
					}
				},
				{
					"name": "Get Account Balance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts/{{account_id}}/balance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{account_id}}",
								"balance"
							]
						}
					}
				},
				{
					"name": "Get Transaction History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/bank-transactions/account/{{account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"bank-transactions",
								"account",
								"{{account_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "💰 Expense Management",
			"item": [
				{
					"name": "Get Expense Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/expense-categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"expense-categories"
							]
						}
					}
				},
				{
					"name": "Create Expense Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alimentação\",\n    \"color\": \"#FF6B6B\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/expense-categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"expense-categories"
							]
						}
					}
				},
				{
					"name": "Add Expense",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"categoryId\": 1,\n    \"amount\": 25.50,\n    \"description\": \"Almoço no restaurante\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/expenses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"expenses"
							]
						}
					}
				},
				{
					"name": "Get My Expenses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/expenses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"expenses"
							]
						}
					}
				},
				{
					"name": "Get Expenses by Month",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/expenses/month/2025-09",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"expenses",
								"month",
								"2025-09"
							]
						}
					}
				}
			]
		},
		{
			"name": "📊 Budget Management",
			"item": [
				{
					"name": "Create Budget",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"categoryId\": 1,\n    \"budgetMonth\": \"2025-09\",\n    \"limitAmount\": 500.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/budgets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"budgets"
							]
						}
					}
				},
				{
					"name": "Get My Budgets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/budgets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"budgets"
							]
						}
					}
				},
				{
					"name": "Get Budget by Month",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/budgets/month/2025-09",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"budgets",
								"month",
								"2025-09"
							]
						}
					}
				}
			]
		},
		{
			"name": "👤 User Profile",
			"item": [
				{
					"name": "Get My Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					}
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"João Silva Santos\",\n    \"email\": \"joao.santos@email.com\",\n    \"phone\": \"11988888888\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					}
				}
			]
		}
	]
}
